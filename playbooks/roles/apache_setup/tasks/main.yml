- name: Create document root and other File structures for User
  file: 
    path: "{{ item.dest }}"
    mode: 0755
    owner: "{{ web_user }}"
    group: "{{ web_user }}"
    state: directory
  loop:
    - { dest: '/home/{{ web_user }}/{{ primary_domain }}/html' }
    - { dest: '/home/{{ web_user }}/var/{{ primary_domain }}/logs' }
    - { dest: '/home/{{ web_user }}/var/{{ primary_domain }}/backups' }
    - { dest: '/home/{{ web_user }}/var/{{ primary_domain }}/apache' }
    - { dest: '/home/{{ web_user }}/var/php-fpm' }
  when: primary_domain_update

- name: Create document root for Secondary sites
  file:
    path: '/home/{{ web_user }}/{{ secondary_domains.name }}/html'
    mode: 0755
    owner: "{{ web_user }}"
    group: "{{ web_user }}"
    state: directory
  loop: "{{ secondary_domain.sites }}"
  loop_control:
    loop_var: secondary_domains
    label: '{{ secondary_domains.name }}'
  when: secondary_domain_update

- name: Create Log directory for Secondary sites
  file:
    path: '/home/{{ web_user }}/var/{{ secondary_domains.name }}/logs'
    mode: 0755
    owner: "{{ web_user }}"
    group: "{{ web_user }}"
    state: directory
  loop: "{{ secondary_domain.sites }}"
  loop_control:
    loop_var: secondary_domains
    label: '{{ secondary_domains.name }}'
  when: secondary_domain_update

- name: Create Backups directory for Secondary sites
  file:
    path: '/home/{{ web_user }}/var/{{ secondary_domains.name }}/backups'
    mode: 0755
    owner: "{{ web_user }}"
    group: "{{ web_user }}"
    state: directory
  loop: "{{ secondary_domain.sites }}"
  loop_control:
    loop_var: secondary_domains
    label: '{{ secondary_domains.name }}'
  when: secondary_domain_update

- name: Create Apache Includes directory for Secondary sites
  file:
    path: '/home/{{ web_user }}/var/{{ secondary_domains.name }}/apache'
    mode: 0755
    owner: "{{ web_user }}"
    group: "{{ web_user }}"
    state: directory
  loop: "{{ secondary_domain.sites }}"
  loop_control:
    loop_var: secondary_domains
    label: '{{ secondary_domains.name }}'
  when: secondary_domain_update

- name: Create Symlink for Primary Domain Doc Root
  file:
    src: "/home/{{ web_user }}/{{ primary_domain }}/html"
    dest: "/home/{{ web_user }}/public_html"
    owner: "{{ web_user }}"
    group: "{{ web_user }}"
    state: link
  when: primary_domain_update

- name: Create Symlink for Backups for Primary Domain
  file:
    src: "/home/{{ web_user }}/var/{{ primary_domain }}/backups"
    dest: "/home/{{ web_user }}/{{ primary_domain }}/backups"
    owner: "{{ web_user }}"
    group: "{{ web_user }}"
    state: link
  when: primary_domain_update

- name: Create Symlink for Backups for Secondary Domains
  file:
    src: "/home/{{ web_user }}/var/{{ secondary_domains.name }}/backups"
    dest: "/home/{{ web_user }}/{{ secondary_domains.name }}/backups"
    owner: "{{ web_user }}"
    group: "{{ web_user }}"
    state: link
  loop: "{{ secondary_domain.sites }}"
  loop_control:
    loop_var: secondary_domains
    label: '{{ secondary_domains.name }}'
  when: secondary_domain_update

- name: Set up Apache Virtual Host
  template:
    src: "apache_vhost.conf.j2"
    dest: "/etc/apache2/sites-available/{{ primary_domain }}.conf"
  notify: Restart-Apache
  when: primary_domain_update

- name: Enable the New Site
  shell: /usr/sbin/a2ensite "{{ primary_domain }}"
  notify: Restart-Apache
  when: primary_domain_update

- name: Set up Apache Virtual Host for Secondary Domain
  template:
    src: "apache_secondary_vhost.conf.j2"
    dest: "/etc/apache2/sites-available/{{ secondary_domain }}.conf"
  notify: Restart-Apache
  when: secondary_domain_update

- name: Enable Secondary Site
  shell: /usr/sbin/a2ensite "{{ secondary_domain }}"
  notify: Restart-Apache
  when: secondary_domain_update

- name: Enable Mod_Rewrite
  shell: /usr/sbin/a2enmod rewrite
  notify: Restart-Apache

- include_tasks: modsecurity-install.yml
  when: base_install